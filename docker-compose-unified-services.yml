version: '3.5'

networks:
  transparent-network:
    driver: transparent
    driver_opts:
      com.docker.network.windowsshim.networkname: transparent-network
      com.docker.network.windowsshim.vlanid: 60
    ipam:
      config:
        - subnet: 10.100.60.0/24
          gateway: 10.100.60.1

services:
  plex:
    image: jhnrn/plex-server
    restart: unless-stopped
    container_name: "plex"
    hostname: plex-server

    networks:
      transparent-network:
        ipv4_address: "10.100.60.14"
    volumes:
      - S:\plex-docker\:c:\plex
      - M:\:c:\media
      
  caddy:
    image: jhnrn/caddy-win:20211111.35
    restart: always
    container_name: "caddy"
    networks:
      transparent-network:
        ipv4_address: "10.100.60.12"
    volumes:
      - s:\caddy-docker\:C:\config
    environment:
      - DNS_API_KEY=${DNS_API_KEY}
      - XDG_DATA_HOME=c:\config

  influx-db:
    image: jhnrn/influxdb-windows
    container_name: "influxdb"
    restart: always
    networks:
      transparent-network:
        ipv4_address: "10.100.60.19"
    volumes:
      - S:\influxdb-docker\:C:\config

  grafana:
    image: jhnrn/grafana-windows
    container_name: "grafana"
    restart: always
    networks:
      transparent-network:
        ipv4_address: "10.100.60.20"
    volumes:
      - S:\grafana-docker\:C:\config

  jackett:
    image: jhnrn/jackett-windows
    container_name: "jackett"
    restart: always
    networks:
      transparent-network:
        ipv4_address: "10.100.60.10"
    volumes:
      - S:\jackett-docker\:C:\config

  qbittorrent:
    image: jhnrn/qbittorrent-windows
    container_name: "qbittorrent"
    restart: unless-stopped
    networks:
      transparent-network:
        ipv4_address: "10.100.60.16"
    volumes:
      - S:\qbittorrent-docker\:C:\Users\ContainerAdministrator\AppData
      - t:\:C:\torrents
      
  radarr:
    image: jhnrn/radarr-windows:20211111.3
    container_name: "radarr"
    restart: unless-stopped
    networks:
      transparent-network:
        ipv4_address: "10.100.60.18"
    volumes:
      - S:\radarr-docker\:C:\radarr
      - M:\Movies\:C:\media
      - T:\:C:\torrents

  sonarr:
    image: jhnrn/sonarr-windows
    container_name: "sonarr"
    restart: unless-stopped
    networks:
      transparent-network:
        ipv4_address: "10.100.60.17"
    volumes:
      - S:\sonarr-docker\:C:\sonarr
      - M:\Series\:C:\media
      - T:\:C:\torrents

  github-runner:
    image: jhnrn/github-runner
    restart: always
    container_name: "github_runner"
    hostname: github-runner
    networks:
      transparent-network:
        ipv4_address: "10.100.60.15"
    volumes:
      - source: \\.\pipe\docker_engine
        target: \\.\pipe\docker_engine
        type: npipe
    environment:
      - GITHUBREPO_OR_ORG=jahanarun/container-host
      - GITHUBPAT=${GITHUB_PAT_TOKEN}

  cloudflared-torrent:
    image: jhnrn/cloudflared
    restart: unless-stopped
    container_name: "cloudflared-torrent"
    command: tunnel --config c:/Users/ContainerAdministrator/.cloudflared/torrent.yml run
    networks:
      transparent-network:
        ipv4_address: "10.100.60.25"
    volumes:
      - S:\cloudflared-docker\:c:\Users\ContainerAdministrator\.cloudflared

  cloudflared-nextcloud:
    image: jhnrn/cloudflared
    restart: unless-stopped
    container_name: "cloudflared-nextcloud"
    command: tunnel --config c:/Users/ContainerAdministrator/.cloudflared/nextcloud.yml run
    networks:
      transparent-network:
        ipv4_address: "10.100.60.26"
    volumes:
      - S:\cloudflared-docker\:c:\Users\ContainerAdministrator\.cloudflared

  cloudflared-container-host:
    image: jhnrn/cloudflared
    restart: unless-stopped
    container_name: "cloudflared-container-host"
    command: tunnel --config c:/Users/ContainerAdministrator/.cloudflared/container-host.yml run
    networks:
      transparent-network:
        ipv4_address: "10.100.60.27"
    volumes:
      - S:\cloudflared-docker\:c:\Users\ContainerAdministrator\.cloudflared

  cloudflared-docker-host:
    image: jhnrn/cloudflared
    restart: unless-stopped
    container_name: "cloudflared-docker-host"
    command: tunnel --config c:/Users/ContainerAdministrator/.cloudflared/docker-host.yml run
    networks:
      transparent-network:
        ipv4_address: "10.100.60.28"
    volumes:
      - S:\cloudflared-docker\:c:\Users\ContainerAdministrator\.cloudflared

  cloudflared-plex:
    image: jhnrn/cloudflared
    restart: unless-stopped
    container_name: "cloudflared-plex"
    command: tunnel --config c:/Users/ContainerAdministrator/.cloudflared/plex.yml run
    networks:
      transparent-network:
        ipv4_address: "10.100.60.29"
    volumes:
      - S:\cloudflared-docker\:c:\Users\ContainerAdministrator\.cloudflared

  cloudflared-photoprism:
    image: jhnrn/cloudflared
    restart: unless-stopped
    container_name: "cloudflared-photoprism"
    command: tunnel --config c:/Users/ContainerAdministrator/.cloudflared/photoprism.yml run
    networks:
      transparent-network:
        ipv4_address: "10.100.60.30"
    volumes:
      - S:\cloudflared-docker\:c:\Users\ContainerAdministrator\.cloudflared
