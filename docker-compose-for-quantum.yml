version: "3.5"

networks:

  quantum-net:
    driver: macvlan # Otherwise PiHole container cannot resolve DNS internally due to NAT issue within Docker
    driver_opts:
      parent: ${NETWORK_DEVICE}.${QUANTUM_VLAN_ID}
      name: macvlan${QUANTUM_VLAN_ID}
    ipam:
      config:
        - subnet: 10.100.${QUANTUM_VLAN_ID}.0/24
          gateway: ${QUANTUM_GATEWAY}
          ip_range: 10.100.${QUANTUM_VLAN_ID}.50/30 # 48 - 51

services:

  dns-upstream:
    image: jhnrn/cloudflared:latest
    container_name: "cloudflared-dnsproxy-${QUANTUM_VLAN_NAME}"
    command: proxy-dns
    restart: always
    environment:
      TZ: ${TZ}    
      TUNNEL_METRICS: "0.0.0.0:49312"
      TUNNEL_DNS_ADDRESS: "0.0.0.0"
      TUNNEL_DNS_PORT: ${TUNNEL_DNS_PORT}
      TUNNEL_DNS_UPSTREAM: ${QUANTUM_DNS_UPSTREAM}
    networks:
      quantum-net:
    healthcheck:
      test: dig +short @127.0.0.1 -p${TUNNEL_DNS_PORT} cloudflare.com A || exit 1
      # test: 'curl --http2 -H "accept: application/dns-json" "https://1.1.1.1/dns-query?name=cloudflare.com"  || exit 1'
      interval: 30s
      timeout: 5s
      retries: 2
    labels:
      - autoheal=true

  nextdns-upstream:
    container_name: nextdns-upstream
    image: "jhnrn/nextdns-cli:latest"
    restart: "always"
    # ports:
    #   - "5053:53/tcp"
    #   - "5053:53/udp"
    environment:
      NEXTDNS_PROFILE: ${NEXTDNS_PROFILE}
      NEXTDNS_CACHE_SIZE: "10m"
      NEXTDNS_REPORT_CLIENT_INFO: "true"
    networks:
      quantum-net:
    # Warning: This WILL use your DNS query quota. Since its TTL is 300s,
    # each check will be 1 query against your quota every 5 minutes. Enable carefully.
    healthcheck:
     test: [
       "CMD", "sh", "-c",
       "dig +time=10 @127.0.0.1 -p $$(echo $${NEXTDNS_LISTEN:-:53} | rev | cut -d: -f1 | rev) probe-test.dns.nextdns.io"
     ]
     interval: "30s"
     timeout: "10s"
     retries: 1
     start_period: "5s"
    labels:
      - autoheal=true
      # - homepage.group=DNS
      # - homepage.icon=nextdns.png
      # - homepage.description=NextDNS
      # - homepage.href=https://my.nextdns.com
      # - homepage.widget.type=nextdns
      # - homepage.widget.key=${NEXTDNS_APIKEY}
      # - homepage.widget.profile=${NEXTDNS_PROFILE_ID}

  pihole:
    container_name: pihole-${QUANTUM_VLAN_NAME}
    hostname: pihole-${QUANTUM_VLAN_NAME}
    image: pihole/pihole:dev
    environment:
      TZ: ${TZ}
      WEBPASSWORD: ${PIHOLE_WEBPASSWORD}
      PIHOLE_DNS_: nextdns-upstream#53 #dns-upstream#${TUNNEL_DNS_PORT};127.0.0.1#5053;8.8.8.8;8.8.4.4;upstream0;upstream1
      # Listen on all interfaces and permit all origins
      # This allows Pihole to work in this setup and when answering across VLANS,
      # but do not expose pi-hole to the internet!
      DNSMASQ_LISTENING: local #all
      DNS_BOGUS_PRIV: true
      DNS_FQDN_REQUIRED: true
      DHCP_ACTIVE: true
      DHCP_START: 10.100.${QUANTUM_VLAN_ID}.${DHCP_START_OCTET:-201}
      DHCP_END: 10.100.${QUANTUM_VLAN_ID}.${DHCP_END_OCTET:-251}
      DHCP_ROUTER: ${QUANTUM_GATEWAY}
      PIHOLE_DOMAIN: ${DOMAIN}
      DHCP_LEASETIME: 24
      WEBTHEME: default-auto
    # Volumes store your data between container upgrades
    volumes:
      - ${DATA_STORAGE}/pihole/${QUANTUM_VLAN_NAME}/pihole:/etc/pihole
      - ${DATA_STORAGE}/pihole/${QUANTUM_VLAN_NAME}/dnsmasq.d:/etc/dnsmasq.d
      - ${DATA_STORAGE}/pihole/global/custom.list:/etc/pihole/custom.list
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
    networks:
      quantum-net:
        ipv4_address: ${QUANTUM_PIHOLE_IP_ADDRESS}
    dns:
      - 127.0.0.1
    restart: unless-stopped
    depends_on:
      - dns-upstream
      - nextdns-upstream
    labels:
      - homepage.group=DNS
      - homepage.weight=1
      - homepage.name=Pihole-quantum
      - homepage.icon=pi-hole.png
      - homepage.href=http://${QUANTUM_PIHOLE_IP_ADDRESS}/admin
      - homepage.description=for ${QUANTUM_VLAN_NAME}
      - homepage.widget.type=pihole
      - homepage.widget.key=${PIHOLE_TOKEN}
      - homepage.widget.url=http://${QUANTUM_PIHOLE_IP_ADDRESS}
      # - homepage.widget.fields=["queries", "blocked", "gravity"]

  tailscale:
    container_name: tailscale-quantum
    hostname: tailscale-quantum
    image: tailscale/tailscale:stable
    restart: "always"
    # cap_add:
    #   - NET_ADMIN # Used for configuring a network
    #   - NET_RAW # Used for accessing privileged socket operations
    environment:
      TS_AUTHKEY: ${TAILSCALE_AUTHKEY}
      TS_EXTRA_ARGS: --advertise-exit-node --accept-dns=false --advertise-tags=${TAILSCALE_ADVERTISE_TAGS}
      TS_ROUTES: ${TAILSCALE_ROUTES}
    volumes:
      - ${DATA_STORAGE}/tailscale:/var/lib
    networks:
      quantum-net:
    dns:
      ${QUANTUM_PIHOLE_IP_ADDRESS}
    depends_on:
      - pihole