version: "3.9"

networks:
  transit-net:
    driver: macvlan # Otherwise PiHole container cannot resolve DNS internally due to NAT issue within Docker
    driver_opts:
      parent: eth0.${VLAN_ID}
      name: macvlan${VLAN_ID}
    ipam:
      config:
        - subnet: 10.100.${VLAN_ID}.0/24
          gateway: ${GATEWAY_IP_ADDRESS}

services:
  cloudflared-dnsproxy:
    image: jhnrn/cloudflared:latest
    container_name: "cloudflared-dnsproxy-${VLAN_NAME}"
    command: proxy-dns
    restart: always
    environment:
      TZ: ${TZ}    
      TUNNEL_METRICS: "0.0.0.0:49312"
      TUNNEL_DNS_ADDRESS: "0.0.0.0"
      TUNNEL_DNS_PORT: ${TUNNEL_DNS_PORT}
      TUNNEL_DNS_UPSTREAM: ${TUNNEL_DNS_UPSTREAM}
    networks:
      transit-net:
        ipv4_address: ${CLOUDFLARED_DNSPROXY_IPADDR}
    healthcheck:
      # test: dig +short @127.0.0.1 -p${TUNNEL_DNS_PORT} bing.com AAAA || exit 1
      test: 'curl --http2 -H "accept: application/dns-json" "https://1.1.1.1/dns-query?name=cloudflare.com"  || exit 1'
      interval: 30s
      timeout: 5s
      retries: 2
    labels:
      - autoheal=true

  pihole:
    container_name: pihole-${VLAN_NAME}
    hostname: pihole-${VLAN_NAME}
    image: pihole/pihole:dev
    # For DHCP it is recommended to remove these ports and instead add: network_mode: "host"
    # ports:
      # - "53:53/tcp"
      # - "53:53/udp"
      # - "67:67/udp" # Only required if you are using Pi-hole as your DHCP server
      # - "80:80/tcp"
    environment:
      TZ: ${TZ}
      WEBPASSWORD: ${PIHOLE_WEBPASSWORD}
      DNS1: ${CLOUDFLARED_DNSPROXY_IPADDR}#${TUNNEL_DNS_PORT}
      DNS2: no # Explicitly disable a second DNS server, otherwise Pi-hole uses Google
      # Listen on all interfaces and permit all origins
      # This allows Pihole to work in this setup and when answering across VLANS,
      # but do not expose pi-hole to the internet!
      DNSMASQ_LISTENING: all
    # Volumes store your data between container upgrades
    volumes:
      - ${DATA_STORAGE}/pihole/${VLAN_NAME}/pihole:/etc/pihole
      - ${DATA_STORAGE}/pihole/${VLAN_NAME}/dnsmasq.d:/etc/dnsmasq.d
      - ${DATA_STORAGE}/pihole/global/custom.list:/etc/pihole/custom.list
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
    networks:
      transit-net:
        ipv4_address: ${PIHOLE_IP_ADDRESS}
    dns:
      - 127.0.0.1        
    restart: unless-stopped
    depends_on:
      - cloudflared-dnsproxy
    labels:
      - homepage.group=Network
      - homepage.weight=1
      - homepage.name=Pihole-${VLAN_NAME}
      - homepage.icon=pihole.png
      - homepage.href=http://${PIHOLE_IP_ADDRESS}/admin
      - homepage.description=Pihole for ${VLAN_NAME}
      - homepage.widget.type=pihole
      - homepage.widget.key=${PIHOLE_TOKEN}
      - homepage.widget.url=http://${PIHOLE_IP_ADDRESS}
      - homepage.widget.fields=["queries", "blocked", "gravity"]